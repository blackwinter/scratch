#! /bin/bash

set -o pipefail

stdout=/dev/stdout
headers=vsz,rss,sz,%mem,%cpu,time,etime,pid
padding=' '; for i in {1..7}; do padding+=$padding; done

count=
file=$stdout
interval=1
pid=
watch=

usage="Usage: $0 [-c <count>] [-i <interval=$interval>] [-o <file>|-w] {-p <pid>|<cmd> [<arg>...]}"

while getopts i:c:ho:p:w opt; do
  case "$opt" in
    c ) count="$OPTARG";;
    h ) echo "$usage"; exit;;
    i ) interval="$OPTARG";;
    o ) file="$OPTARG"; watch=;;
    p ) pid="$OPTARG";;
    w ) watch=-n; file=$stdout;;
  esac
done

shift $((OPTIND - 1))

if [ -z "$pid" ]; then
  [ $# -eq 0 ] && echo "$usage" && exit 1

  "$@" &
  pid=$!

  trap "kill $pid" INT TERM
  echo "$0: [$pid] $@"
fi

while :; do
  res=$(ps -o $headers $noh $pid | sed 's/^ *//; s/ \+/,/g') || break

  [ -n "$watch" ] && echo -n "$padding" $'\r'
  echo $watch "$res"

  [ -n "$count" ] && [ $((++j)) -ge $count ] && break
  sleep $interval || break

  noh=--no-headers
done >"$file"

[ -n "$watch" ] && echo

wait
